# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Generate Spark Extent Report
      run: |
        # Execute your Spark job and generate the Extent Report
        # Save the report to a known location within the workspace
    - name: Archive Extent Report
      uses: actions/upload-artifact@v2
      with:
        name: Spark Extent Report
        path: test-output/SparkReport/Index.html
    - name: Get Artifact Download Link
      id: artifact
      uses: actions/github-script@v4
      with:
        script: |
          const response = await github.actions.createArtifactDownloadUrl({
            artifact_name: 'Spark Extent Report',
            repository: context.repo,
            token: ${{ secrets.GITHUB_TOKEN }}
          });
          console.log(response.data.download_url);
